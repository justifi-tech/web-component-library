/// <reference path="../jsx.d.ts" />
import { PropSchema } from './props-manager.js';

// Checkout Component Schema (based on actual justifi-checkout component)
export const CHECKOUT_SCHEMA: PropSchema[] = [
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: '',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access (generated by server)',
    required: true,
  },
  {
    name: 'checkoutId',
    type: 'string',
    label: 'Checkout ID',
    defaultValue: '',
    placeholder: 'Enter checkout ID',
    description: 'Unique checkout session identifier (generated by server)',
    required: true,
  },
  {
    name: 'disableCreditCard',
    type: 'boolean',
    label: 'Disable Credit Card',
    defaultValue: false,
    description: 'Hide credit card payment option',
  },
  {
    name: 'disableBankAccount',
    type: 'boolean',
    label: 'Disable Bank Account',
    defaultValue: false,
    description: 'Hide bank account payment option',
  },
  {
    name: 'disableBnpl',
    type: 'boolean',
    label: 'Disable BNPL',
    defaultValue: false,
    description: 'Hide Buy Now Pay Later option',
  },
  {
    name: 'disablePaymentMethodGroup',
    type: 'boolean',
    label: 'Disable Payment Method Group',
    defaultValue: false,
    description: 'Hide payment method group selection',
  },
  {
    name: 'hideCardBillingForm',
    type: 'boolean',
    label: 'Hide Card Billing Form',
    defaultValue: false,
    description: 'Hide billing form for credit card payments',
  },
  {
    name: 'hideBankAccountBillingForm',
    type: 'boolean',
    label: 'Hide Bank Account Billing Form',
    defaultValue: false,
    description: 'Hide billing form for bank account payments',
  },
];

// Business Details Component Schema (based on actual justifi-business-details component)
export const BUSINESS_DETAILS_SCHEMA: PropSchema[] = [
  {
    name: 'businessId',
    type: 'string',
    label: 'Business ID',
    defaultValue: 'bus_123456789',
    placeholder: 'Enter business ID',
    description: 'Unique business identifier',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
];

// Payments List Component Schema (based on actual justifi-payments-list component)
export const PAYMENTS_LIST_SCHEMA: PropSchema[] = [
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier for payments',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'columns',
    type: 'string',
    label: 'Columns',
    defaultValue: 'id,amount,status,created_at',
    placeholder: 'Enter column keys (comma-separated)',
    description: 'Columns to display in the payments table',
  },
];

// Payouts List Component Schema (based on actual justifi-payouts-list component)
export const PAYOUTS_LIST_SCHEMA: PropSchema[] = [
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier for payouts',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'columns',
    type: 'string',
    label: 'Columns',
    defaultValue: 'id,amount,status,created_at',
    placeholder: 'Enter column keys (comma-separated)',
    description: 'Columns to display in the payouts table',
  },
];

// Terminals List Component Schema (based on actual justifi-terminals-list component)
export const TERMINALS_LIST_SCHEMA: PropSchema[] = [
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier for terminals',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'columns',
    type: 'string',
    label: 'Columns',
    defaultValue: 'id,serial_number,status,created_at',
    placeholder: 'Enter column keys (comma-separated)',
    description: 'Columns to display in the terminals table',
  },
];

// Dispute Management Component Schema (based on actual justifi-dispute-management component)
export const DISPUTE_MANAGEMENT_SCHEMA: PropSchema[] = [
  {
    name: 'disputeId',
    type: 'string',
    label: 'Dispute ID',
    defaultValue: 'dsp_123456789',
    placeholder: 'Enter dispute ID',
    description: 'Unique dispute identifier',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
];

// Payment Details Component Schema (based on actual justifi-payment-details component)
export const PAYMENT_DETAILS_SCHEMA: PropSchema[] = [
  {
    name: 'paymentId',
    type: 'string',
    label: 'Payment ID',
    defaultValue: 'pay_123456789',
    placeholder: 'Enter payment ID',
    description: 'Unique payment identifier',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
];

// Payout Details Component Schema (based on actual justifi-payout-details component)
export const PAYOUT_DETAILS_SCHEMA: PropSchema[] = [
  {
    name: 'payoutId',
    type: 'string',
    label: 'Payout ID',
    defaultValue: 'pyt_123456789',
    placeholder: 'Enter payout ID',
    description: 'Unique payout identifier',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
];

// Refund Payment Component Schema (based on actual justifi-refund-payment component)
export const REFUND_PAYMENT_SCHEMA: PropSchema[] = [
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier',
    required: true,
  },
  {
    name: 'paymentId',
    type: 'string',
    label: 'Payment ID',
    defaultValue: 'pay_123456789',
    placeholder: 'Enter payment ID',
    description: 'Payment to refund',
    required: true,
  },
  {
    name: 'hideSubmitButton',
    type: 'boolean',
    label: 'Hide Submit Button',
    defaultValue: false,
    description: 'Hide the submit button (for custom forms)',
  },
];

// Tokenize Payment Method Component Schema (based on actual justifi-tokenize-payment-method component)
export const TOKENIZE_PAYMENT_METHOD_SCHEMA: PropSchema[] = [
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier',
    required: true,
  },
];

// Order Terminals Component Schema (based on actual justifi-order-terminals component)
export const ORDER_TERMINALS_SCHEMA: PropSchema[] = [
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier',
    required: true,
  },
];

// Gross Payment Chart Component Schema (based on actual justifi-gross-payment-chart component)
export const GROSS_PAYMENT_CHART_SCHEMA: PropSchema[] = [
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier',
    required: true,
  },
];

// Checkouts List Component Schema (based on actual justifi-checkouts-list component)
export const CHECKOUTS_LIST_SCHEMA: PropSchema[] = [
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier for checkouts',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'columns',
    type: 'string',
    label: 'Columns',
    defaultValue: 'id,amount,status,created_at',
    placeholder: 'Enter column keys (comma-separated)',
    description: 'Columns to display in the checkouts table',
  },
];

// Terminal Orders List Component Schema (based on actual justifi-terminal-orders-list component)
export const TERMINAL_ORDERS_LIST_SCHEMA: PropSchema[] = [
  {
    name: 'accountId',
    type: 'string',
    label: 'Account ID',
    defaultValue: 'acc_123456789',
    placeholder: 'Enter account ID',
    description: 'Account identifier for terminal orders',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'columns',
    type: 'string',
    label: 'Columns',
    defaultValue: 'id,quantity,status,created_at',
    placeholder: 'Enter column keys (comma-separated)',
    description: 'Columns to display in the terminal orders table',
  },
];

// Payment Transactions List Component Schema (based on actual justifi-payment-transactions-list component)
export const PAYMENT_TRANSACTIONS_LIST_SCHEMA: PropSchema[] = [
  {
    name: 'paymentId',
    type: 'string',
    label: 'Payment ID',
    defaultValue: 'pay_123456789',
    placeholder: 'Enter payment ID',
    description: 'Payment identifier for transactions',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'columns',
    type: 'string',
    label: 'Columns',
    defaultValue: 'id,type,amount,created_at',
    placeholder: 'Enter column keys (comma-separated)',
    description: 'Columns to display in the payment transactions table',
  },
];

// Payout Transactions List Component Schema (based on actual justifi-payout-transactions-list component)
export const PAYOUT_TRANSACTIONS_LIST_SCHEMA: PropSchema[] = [
  {
    name: 'payoutId',
    type: 'string',
    label: 'Payout ID',
    defaultValue: 'pyt_123456789',
    placeholder: 'Enter payout ID',
    description: 'Payout identifier for transactions',
    required: true,
  },
  {
    name: 'authToken',
    type: 'string',
    label: 'Auth Token',
    defaultValue: 'test-token-123',
    placeholder: 'Enter auth token',
    description: 'Authentication token for API access',
    required: true,
  },
  {
    name: 'columns',
    type: 'string',
    label: 'Columns',
    defaultValue: 'id,type,amount,created_at',
    placeholder: 'Enter column keys (comma-separated)',
    description: 'Columns to display in the payout transactions table',
  },
];

// Schema registry for easy access
export const SCHEMA_REGISTRY: Record<string, PropSchema[]> = {
  checkout: CHECKOUT_SCHEMA,
  'business-details': BUSINESS_DETAILS_SCHEMA,
  'payments-list': PAYMENTS_LIST_SCHEMA,
  'payouts-list': PAYOUTS_LIST_SCHEMA,
  'terminals-list': TERMINALS_LIST_SCHEMA,
  'dispute-management': DISPUTE_MANAGEMENT_SCHEMA,
  'payment-details': PAYMENT_DETAILS_SCHEMA,
  'payout-details': PAYOUT_DETAILS_SCHEMA,
  'refund-payment': REFUND_PAYMENT_SCHEMA,
  'tokenize-payment-method': TOKENIZE_PAYMENT_METHOD_SCHEMA,
  'order-terminals': ORDER_TERMINALS_SCHEMA,
  'gross-payment-chart': GROSS_PAYMENT_CHART_SCHEMA,
  'checkouts-list': CHECKOUTS_LIST_SCHEMA,
  'terminal-orders-list': TERMINAL_ORDERS_LIST_SCHEMA,
  'payment-transactions-list': PAYMENT_TRANSACTIONS_LIST_SCHEMA,
  'payout-transactions-list': PAYOUT_TRANSACTIONS_LIST_SCHEMA,
};

/**
 * Get schema for a component by name
 */
export function getSchema(componentName: string): PropSchema[] {
  return SCHEMA_REGISTRY[componentName] || [];
}

/**
 * Get all available component names
 */
export function getAvailableComponents(): string[] {
  return Object.keys(SCHEMA_REGISTRY);
}
