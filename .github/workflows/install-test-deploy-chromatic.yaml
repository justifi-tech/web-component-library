name: Install, Test, and Deploy

on:
  pull_request:
    paths:
      - 'packages/webcomponents/**'

jobs:
  # ðŸ‘· Job 1: Install and Build
  install-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.7.5

      - name: Install dependencies
        run: pnpm install

      - name: Create .env file from secrets
        shell: bash
        working-directory: ./packages/webcomponents
        run: |
          echo "IFRAME_ORIGIN=${{ secrets.IFRAME_ORIGIN }}" >> .env
          echo "PROXY_API_ORIGIN=${{ secrets.PROXY_API_ORIGIN }}" >> .env

      - name: Build webcomponents
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            node_modules
            packages/webcomponents/dist
            packages/webcomponents/.env

  # âœ… Job 2: Test (depends on install-build)
  test:
    runs-on: ubuntu-latest
    needs: install-build
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.7.5

      - name: Run unit tests
        run: pnpm test

  # ðŸš€ Job 3: Chromatic Deployment (depends on install-build)
  chromatic-deployment:
    runs-on: ubuntu-latest
    needs: install-build
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.7.5

      - name: Run Chromatic
        working-directory: ./apps/docs
        run: npx chromatic --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }}
        env:
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
